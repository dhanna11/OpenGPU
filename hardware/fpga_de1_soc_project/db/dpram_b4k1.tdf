--altdpram ACF_BLOCK_RAM_AND_MLAB_EQUIVALENT_PAUSED_READ_CAPABILITIES="CARE" CBX_DECLARE_ALL_CONNECTED_PORTS="OFF" DEVICE_FAMILY="Cyclone V" INDATA_REG="INCLOCK" lpm_hint="USE_EAB=ON" NUMWORDS=1024 OUTDATA_REG="UNREGISTERED" RDADDRESS_REG="OUTCLOCK" RDCONTROL_REG="UNREGISTERED" SUPPRESS_MEMORY_CONVERSION_WARNINGS="ON" USE_EAB="ON" WIDTH=32 WIDTHAD=10 WRADDRESS_REG="INCLOCK" WRCONTROL_REG="INCLOCK" data inclock outclock outclocken q rdaddress wraddress wren CARRY_CHAIN="MANUAL" CARRY_CHAIN_LENGTH=48 CYCLONEII_M4K_COMPATIBILITY="ON" LOW_POWER_MODE="AUTO"
--VERSION_BEGIN 16.0 cbx_altdpram 2016:07:20:19:14:36:SJ cbx_altera_syncram 2016:07:20:19:14:36:SJ cbx_altera_syncram_nd_impl 2016:07:20:19:14:36:SJ cbx_altsyncram 2016:07:20:19:14:36:SJ cbx_cycloneii 2016:07:20:19:14:36:SJ cbx_lpm_add_sub 2016:07:20:19:14:36:SJ cbx_lpm_compare 2016:07:20:19:14:36:SJ cbx_lpm_decode 2016:07:20:19:14:36:SJ cbx_lpm_mux 2016:07:20:19:14:36:SJ cbx_mgl 2016:07:20:20:47:47:SJ cbx_nadder 2016:07:20:19:14:36:SJ cbx_stratix 2016:07:20:19:14:36:SJ cbx_stratixii 2016:07:20:19:14:36:SJ cbx_stratixiii 2016:07:20:19:14:36:SJ cbx_stratixv 2016:07:20:19:14:36:SJ cbx_util_mgl 2016:07:20:19:14:36:SJ  VERSION_END


-- Copyright (C) 1991-2016 Altera Corporation. All rights reserved.
--  Your use of Altera Corporation's design tools, logic functions 
--  and other software and tools, and its AMPP partner logic 
--  functions, and any output files from any of the foregoing 
--  (including device programming or simulation files), and any 
--  associated documentation or information are expressly subject 
--  to the terms and conditions of the Altera Program License 
--  Subscription Agreement, the Altera Quartus Prime License Agreement,
--  the Altera MegaCore Function License Agreement, or other 
--  applicable license agreement, including, without limitation, 
--  that your use is for the sole purpose of programming logic 
--  devices manufactured by Altera and sold by Altera or its 
--  authorized distributors.  Please refer to the applicable 
--  agreement for further details.


FUNCTION altsyncram_cn02 (address_a[9..0], address_b[9..0], clock0, clock1, clocken1, data_a[31..0], wren_a)
RETURNS ( q_b[31..0]);

--synthesis_resources = M10K 4 
SUBDESIGN dpram_b4k1
( 
	data[31..0]	:	input;
	inclock	:	input;
	outclock	:	input;
	outclocken	:	input;
	q[31..0]	:	output;
	rdaddress[9..0]	:	input;
	wraddress[9..0]	:	input;
	wren	:	input;
) 
VARIABLE 
	altsyncram1 : altsyncram_cn02;

BEGIN 
	altsyncram1.address_a[] = wraddress[];
	altsyncram1.address_b[] = rdaddress[];
	altsyncram1.clock0 = inclock;
	altsyncram1.clock1 = outclock;
	altsyncram1.clocken1 = outclocken;
	altsyncram1.data_a[] = data[];
	altsyncram1.wren_a = wren;
	q[] = altsyncram1.q_b[];
END;
--VALID FILE
