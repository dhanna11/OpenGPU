#ifndef _ALTERA_HPS_0_H_
#define _ALTERA_HPS_0_H_

/*
 * This file was automatically generated by the swinfo2header utility.
 * 
 * Created from SOPC Builder system 'soc_system' in
 * file './soc_system.sopcinfo'.
 */

/*
 * This file contains macros for module 'hps_0' and devices
 * connected to the following masters:
 *   h2f_axi_master
 *   h2f_lw_axi_master
 * 
 * Do not include this header file and another header file created for a
 * different module or master group at the same time.
 * Doing so may result in duplicate macro names.
 * Instead, use the system header file which has macros with unique names.
 */

/*
 * Macros for device 'ogpu_quad_store_req', class 'altera_avalon_pio'
 * The macros are prefixed with 'OGPU_QUAD_STORE_REQ_'.
 * The prefix is the slave descriptor.
 */
#define OGPU_QUAD_STORE_REQ_COMPONENT_TYPE altera_avalon_pio
#define OGPU_QUAD_STORE_REQ_COMPONENT_NAME ogpu_quad_store_req
#define OGPU_QUAD_STORE_REQ_BASE 0x0
#define OGPU_QUAD_STORE_REQ_SPAN 16
#define OGPU_QUAD_STORE_REQ_END 0xf
#define OGPU_QUAD_STORE_REQ_BIT_CLEARING_EDGE_REGISTER 0
#define OGPU_QUAD_STORE_REQ_BIT_MODIFYING_OUTPUT_REGISTER 0
#define OGPU_QUAD_STORE_REQ_CAPTURE 0
#define OGPU_QUAD_STORE_REQ_DATA_WIDTH 1
#define OGPU_QUAD_STORE_REQ_DO_TEST_BENCH_WIRING 0
#define OGPU_QUAD_STORE_REQ_DRIVEN_SIM_VALUE 0
#define OGPU_QUAD_STORE_REQ_EDGE_TYPE NONE
#define OGPU_QUAD_STORE_REQ_FREQ 50000000
#define OGPU_QUAD_STORE_REQ_HAS_IN 1
#define OGPU_QUAD_STORE_REQ_HAS_OUT 0
#define OGPU_QUAD_STORE_REQ_HAS_TRI 0
#define OGPU_QUAD_STORE_REQ_IRQ_TYPE NONE
#define OGPU_QUAD_STORE_REQ_RESET_VALUE 0

/*
 * Macros for device 'seven_seg_5', class 'altera_avalon_pio'
 * The macros are prefixed with 'SEVEN_SEG_5_'.
 * The prefix is the slave descriptor.
 */
#define SEVEN_SEG_5_COMPONENT_TYPE altera_avalon_pio
#define SEVEN_SEG_5_COMPONENT_NAME seven_seg_5
#define SEVEN_SEG_5_BASE 0x0
#define SEVEN_SEG_5_SPAN 16
#define SEVEN_SEG_5_END 0xf
#define SEVEN_SEG_5_BIT_CLEARING_EDGE_REGISTER 0
#define SEVEN_SEG_5_BIT_MODIFYING_OUTPUT_REGISTER 0
#define SEVEN_SEG_5_CAPTURE 0
#define SEVEN_SEG_5_DATA_WIDTH 7
#define SEVEN_SEG_5_DO_TEST_BENCH_WIRING 0
#define SEVEN_SEG_5_DRIVEN_SIM_VALUE 0
#define SEVEN_SEG_5_EDGE_TYPE NONE
#define SEVEN_SEG_5_FREQ 50000000
#define SEVEN_SEG_5_HAS_IN 0
#define SEVEN_SEG_5_HAS_OUT 1
#define SEVEN_SEG_5_HAS_TRI 0
#define SEVEN_SEG_5_IRQ_TYPE NONE
#define SEVEN_SEG_5_RESET_VALUE 0

/*
 * Macros for device 'ogpu_quad_store_data_high', class 'altera_avalon_pio'
 * The macros are prefixed with 'OGPU_QUAD_STORE_DATA_HIGH_'.
 * The prefix is the slave descriptor.
 */
#define OGPU_QUAD_STORE_DATA_HIGH_COMPONENT_TYPE altera_avalon_pio
#define OGPU_QUAD_STORE_DATA_HIGH_COMPONENT_NAME ogpu_quad_store_data_high
#define OGPU_QUAD_STORE_DATA_HIGH_BASE 0x10
#define OGPU_QUAD_STORE_DATA_HIGH_SPAN 16
#define OGPU_QUAD_STORE_DATA_HIGH_END 0x1f
#define OGPU_QUAD_STORE_DATA_HIGH_BIT_CLEARING_EDGE_REGISTER 0
#define OGPU_QUAD_STORE_DATA_HIGH_BIT_MODIFYING_OUTPUT_REGISTER 0
#define OGPU_QUAD_STORE_DATA_HIGH_CAPTURE 0
#define OGPU_QUAD_STORE_DATA_HIGH_DATA_WIDTH 32
#define OGPU_QUAD_STORE_DATA_HIGH_DO_TEST_BENCH_WIRING 0
#define OGPU_QUAD_STORE_DATA_HIGH_DRIVEN_SIM_VALUE 0
#define OGPU_QUAD_STORE_DATA_HIGH_EDGE_TYPE NONE
#define OGPU_QUAD_STORE_DATA_HIGH_FREQ 50000000
#define OGPU_QUAD_STORE_DATA_HIGH_HAS_IN 1
#define OGPU_QUAD_STORE_DATA_HIGH_HAS_OUT 0
#define OGPU_QUAD_STORE_DATA_HIGH_HAS_TRI 0
#define OGPU_QUAD_STORE_DATA_HIGH_IRQ_TYPE NONE
#define OGPU_QUAD_STORE_DATA_HIGH_RESET_VALUE 0

/*
 * Macros for device 'seven_seg_4', class 'altera_avalon_pio'
 * The macros are prefixed with 'SEVEN_SEG_4_'.
 * The prefix is the slave descriptor.
 */
#define SEVEN_SEG_4_COMPONENT_TYPE altera_avalon_pio
#define SEVEN_SEG_4_COMPONENT_NAME seven_seg_4
#define SEVEN_SEG_4_BASE 0x10
#define SEVEN_SEG_4_SPAN 16
#define SEVEN_SEG_4_END 0x1f
#define SEVEN_SEG_4_BIT_CLEARING_EDGE_REGISTER 0
#define SEVEN_SEG_4_BIT_MODIFYING_OUTPUT_REGISTER 0
#define SEVEN_SEG_4_CAPTURE 0
#define SEVEN_SEG_4_DATA_WIDTH 7
#define SEVEN_SEG_4_DO_TEST_BENCH_WIRING 0
#define SEVEN_SEG_4_DRIVEN_SIM_VALUE 0
#define SEVEN_SEG_4_EDGE_TYPE NONE
#define SEVEN_SEG_4_FREQ 50000000
#define SEVEN_SEG_4_HAS_IN 0
#define SEVEN_SEG_4_HAS_OUT 1
#define SEVEN_SEG_4_HAS_TRI 0
#define SEVEN_SEG_4_IRQ_TYPE NONE
#define SEVEN_SEG_4_RESET_VALUE 0

/*
 * Macros for device 'ogpu_quad_store_data_low', class 'altera_avalon_pio'
 * The macros are prefixed with 'OGPU_QUAD_STORE_DATA_LOW_'.
 * The prefix is the slave descriptor.
 */
#define OGPU_QUAD_STORE_DATA_LOW_COMPONENT_TYPE altera_avalon_pio
#define OGPU_QUAD_STORE_DATA_LOW_COMPONENT_NAME ogpu_quad_store_data_low
#define OGPU_QUAD_STORE_DATA_LOW_BASE 0x20
#define OGPU_QUAD_STORE_DATA_LOW_SPAN 16
#define OGPU_QUAD_STORE_DATA_LOW_END 0x2f
#define OGPU_QUAD_STORE_DATA_LOW_BIT_CLEARING_EDGE_REGISTER 0
#define OGPU_QUAD_STORE_DATA_LOW_BIT_MODIFYING_OUTPUT_REGISTER 0
#define OGPU_QUAD_STORE_DATA_LOW_CAPTURE 0
#define OGPU_QUAD_STORE_DATA_LOW_DATA_WIDTH 32
#define OGPU_QUAD_STORE_DATA_LOW_DO_TEST_BENCH_WIRING 0
#define OGPU_QUAD_STORE_DATA_LOW_DRIVEN_SIM_VALUE 0
#define OGPU_QUAD_STORE_DATA_LOW_EDGE_TYPE NONE
#define OGPU_QUAD_STORE_DATA_LOW_FREQ 50000000
#define OGPU_QUAD_STORE_DATA_LOW_HAS_IN 1
#define OGPU_QUAD_STORE_DATA_LOW_HAS_OUT 0
#define OGPU_QUAD_STORE_DATA_LOW_HAS_TRI 0
#define OGPU_QUAD_STORE_DATA_LOW_IRQ_TYPE NONE
#define OGPU_QUAD_STORE_DATA_LOW_RESET_VALUE 0

/*
 * Macros for device 'seven_seg_3', class 'altera_avalon_pio'
 * The macros are prefixed with 'SEVEN_SEG_3_'.
 * The prefix is the slave descriptor.
 */
#define SEVEN_SEG_3_COMPONENT_TYPE altera_avalon_pio
#define SEVEN_SEG_3_COMPONENT_NAME seven_seg_3
#define SEVEN_SEG_3_BASE 0x20
#define SEVEN_SEG_3_SPAN 16
#define SEVEN_SEG_3_END 0x2f
#define SEVEN_SEG_3_BIT_CLEARING_EDGE_REGISTER 0
#define SEVEN_SEG_3_BIT_MODIFYING_OUTPUT_REGISTER 0
#define SEVEN_SEG_3_CAPTURE 0
#define SEVEN_SEG_3_DATA_WIDTH 7
#define SEVEN_SEG_3_DO_TEST_BENCH_WIRING 0
#define SEVEN_SEG_3_DRIVEN_SIM_VALUE 0
#define SEVEN_SEG_3_EDGE_TYPE NONE
#define SEVEN_SEG_3_FREQ 50000000
#define SEVEN_SEG_3_HAS_IN 0
#define SEVEN_SEG_3_HAS_OUT 1
#define SEVEN_SEG_3_HAS_TRI 0
#define SEVEN_SEG_3_IRQ_TYPE NONE
#define SEVEN_SEG_3_RESET_VALUE 0

/*
 * Macros for device 'ogpu_quad_store_ack', class 'altera_avalon_pio'
 * The macros are prefixed with 'OGPU_QUAD_STORE_ACK_'.
 * The prefix is the slave descriptor.
 */
#define OGPU_QUAD_STORE_ACK_COMPONENT_TYPE altera_avalon_pio
#define OGPU_QUAD_STORE_ACK_COMPONENT_NAME ogpu_quad_store_ack
#define OGPU_QUAD_STORE_ACK_BASE 0x30
#define OGPU_QUAD_STORE_ACK_SPAN 16
#define OGPU_QUAD_STORE_ACK_END 0x3f
#define OGPU_QUAD_STORE_ACK_BIT_CLEARING_EDGE_REGISTER 0
#define OGPU_QUAD_STORE_ACK_BIT_MODIFYING_OUTPUT_REGISTER 0
#define OGPU_QUAD_STORE_ACK_CAPTURE 0
#define OGPU_QUAD_STORE_ACK_DATA_WIDTH 1
#define OGPU_QUAD_STORE_ACK_DO_TEST_BENCH_WIRING 0
#define OGPU_QUAD_STORE_ACK_DRIVEN_SIM_VALUE 0
#define OGPU_QUAD_STORE_ACK_EDGE_TYPE NONE
#define OGPU_QUAD_STORE_ACK_FREQ 50000000
#define OGPU_QUAD_STORE_ACK_HAS_IN 0
#define OGPU_QUAD_STORE_ACK_HAS_OUT 1
#define OGPU_QUAD_STORE_ACK_HAS_TRI 0
#define OGPU_QUAD_STORE_ACK_IRQ_TYPE NONE
#define OGPU_QUAD_STORE_ACK_RESET_VALUE 0

/*
 * Macros for device 'seven_seg_2', class 'altera_avalon_pio'
 * The macros are prefixed with 'SEVEN_SEG_2_'.
 * The prefix is the slave descriptor.
 */
#define SEVEN_SEG_2_COMPONENT_TYPE altera_avalon_pio
#define SEVEN_SEG_2_COMPONENT_NAME seven_seg_2
#define SEVEN_SEG_2_BASE 0x30
#define SEVEN_SEG_2_SPAN 16
#define SEVEN_SEG_2_END 0x3f
#define SEVEN_SEG_2_BIT_CLEARING_EDGE_REGISTER 0
#define SEVEN_SEG_2_BIT_MODIFYING_OUTPUT_REGISTER 0
#define SEVEN_SEG_2_CAPTURE 0
#define SEVEN_SEG_2_DATA_WIDTH 7
#define SEVEN_SEG_2_DO_TEST_BENCH_WIRING 0
#define SEVEN_SEG_2_DRIVEN_SIM_VALUE 0
#define SEVEN_SEG_2_EDGE_TYPE NONE
#define SEVEN_SEG_2_FREQ 50000000
#define SEVEN_SEG_2_HAS_IN 0
#define SEVEN_SEG_2_HAS_OUT 1
#define SEVEN_SEG_2_HAS_TRI 0
#define SEVEN_SEG_2_IRQ_TYPE NONE
#define SEVEN_SEG_2_RESET_VALUE 0

/*
 * Macros for device 'ogpu_reset', class 'altera_avalon_pio'
 * The macros are prefixed with 'OGPU_RESET_'.
 * The prefix is the slave descriptor.
 */
#define OGPU_RESET_COMPONENT_TYPE altera_avalon_pio
#define OGPU_RESET_COMPONENT_NAME ogpu_reset
#define OGPU_RESET_BASE 0x40
#define OGPU_RESET_SPAN 16
#define OGPU_RESET_END 0x4f
#define OGPU_RESET_BIT_CLEARING_EDGE_REGISTER 0
#define OGPU_RESET_BIT_MODIFYING_OUTPUT_REGISTER 0
#define OGPU_RESET_CAPTURE 0
#define OGPU_RESET_DATA_WIDTH 1
#define OGPU_RESET_DO_TEST_BENCH_WIRING 0
#define OGPU_RESET_DRIVEN_SIM_VALUE 0
#define OGPU_RESET_EDGE_TYPE NONE
#define OGPU_RESET_FREQ 50000000
#define OGPU_RESET_HAS_IN 0
#define OGPU_RESET_HAS_OUT 1
#define OGPU_RESET_HAS_TRI 0
#define OGPU_RESET_IRQ_TYPE NONE
#define OGPU_RESET_RESET_VALUE 0

/*
 * Macros for device 'seven_seg_1', class 'altera_avalon_pio'
 * The macros are prefixed with 'SEVEN_SEG_1_'.
 * The prefix is the slave descriptor.
 */
#define SEVEN_SEG_1_COMPONENT_TYPE altera_avalon_pio
#define SEVEN_SEG_1_COMPONENT_NAME seven_seg_1
#define SEVEN_SEG_1_BASE 0x40
#define SEVEN_SEG_1_SPAN 16
#define SEVEN_SEG_1_END 0x4f
#define SEVEN_SEG_1_BIT_CLEARING_EDGE_REGISTER 0
#define SEVEN_SEG_1_BIT_MODIFYING_OUTPUT_REGISTER 0
#define SEVEN_SEG_1_CAPTURE 0
#define SEVEN_SEG_1_DATA_WIDTH 7
#define SEVEN_SEG_1_DO_TEST_BENCH_WIRING 0
#define SEVEN_SEG_1_DRIVEN_SIM_VALUE 0
#define SEVEN_SEG_1_EDGE_TYPE NONE
#define SEVEN_SEG_1_FREQ 50000000
#define SEVEN_SEG_1_HAS_IN 0
#define SEVEN_SEG_1_HAS_OUT 1
#define SEVEN_SEG_1_HAS_TRI 0
#define SEVEN_SEG_1_IRQ_TYPE NONE
#define SEVEN_SEG_1_RESET_VALUE 0

/*
 * Macros for device 'seven_seg_0', class 'altera_avalon_pio'
 * The macros are prefixed with 'SEVEN_SEG_0_'.
 * The prefix is the slave descriptor.
 */
#define SEVEN_SEG_0_COMPONENT_TYPE altera_avalon_pio
#define SEVEN_SEG_0_COMPONENT_NAME seven_seg_0
#define SEVEN_SEG_0_BASE 0x50
#define SEVEN_SEG_0_SPAN 16
#define SEVEN_SEG_0_END 0x5f
#define SEVEN_SEG_0_BIT_CLEARING_EDGE_REGISTER 0
#define SEVEN_SEG_0_BIT_MODIFYING_OUTPUT_REGISTER 0
#define SEVEN_SEG_0_CAPTURE 0
#define SEVEN_SEG_0_DATA_WIDTH 7
#define SEVEN_SEG_0_DO_TEST_BENCH_WIRING 0
#define SEVEN_SEG_0_DRIVEN_SIM_VALUE 0
#define SEVEN_SEG_0_EDGE_TYPE NONE
#define SEVEN_SEG_0_FREQ 50000000
#define SEVEN_SEG_0_HAS_IN 0
#define SEVEN_SEG_0_HAS_OUT 1
#define SEVEN_SEG_0_HAS_TRI 0
#define SEVEN_SEG_0_IRQ_TYPE NONE
#define SEVEN_SEG_0_RESET_VALUE 0

/*
 * Macros for device 'alt_vip_vfr_vga', class 'alt_vip_vfr'
 * The macros are prefixed with 'ALT_VIP_VFR_VGA_'.
 * The prefix is the slave descriptor.
 */
#define ALT_VIP_VFR_VGA_COMPONENT_TYPE alt_vip_vfr
#define ALT_VIP_VFR_VGA_COMPONENT_NAME alt_vip_vfr_vga
#define ALT_VIP_VFR_VGA_BASE 0x100
#define ALT_VIP_VFR_VGA_SPAN 128
#define ALT_VIP_VFR_VGA_END 0x17f

/*
 * Macros for device 'ogpu_raster_unit_v0x', class 'altera_avalon_pio'
 * The macros are prefixed with 'OGPU_RASTER_UNIT_V0X_'.
 * The prefix is the slave descriptor.
 */
#define OGPU_RASTER_UNIT_V0X_COMPONENT_TYPE altera_avalon_pio
#define OGPU_RASTER_UNIT_V0X_COMPONENT_NAME ogpu_raster_unit_v0x
#define OGPU_RASTER_UNIT_V0X_BASE 0x10000
#define OGPU_RASTER_UNIT_V0X_SPAN 16
#define OGPU_RASTER_UNIT_V0X_END 0x1000f
#define OGPU_RASTER_UNIT_V0X_BIT_CLEARING_EDGE_REGISTER 0
#define OGPU_RASTER_UNIT_V0X_BIT_MODIFYING_OUTPUT_REGISTER 0
#define OGPU_RASTER_UNIT_V0X_CAPTURE 0
#define OGPU_RASTER_UNIT_V0X_DATA_WIDTH 16
#define OGPU_RASTER_UNIT_V0X_DO_TEST_BENCH_WIRING 0
#define OGPU_RASTER_UNIT_V0X_DRIVEN_SIM_VALUE 0
#define OGPU_RASTER_UNIT_V0X_EDGE_TYPE NONE
#define OGPU_RASTER_UNIT_V0X_FREQ 50000000
#define OGPU_RASTER_UNIT_V0X_HAS_IN 0
#define OGPU_RASTER_UNIT_V0X_HAS_OUT 1
#define OGPU_RASTER_UNIT_V0X_HAS_TRI 0
#define OGPU_RASTER_UNIT_V0X_IRQ_TYPE NONE
#define OGPU_RASTER_UNIT_V0X_RESET_VALUE 0

/*
 * Macros for device 'sysid_qsys', class 'altera_avalon_sysid_qsys'
 * The macros are prefixed with 'SYSID_QSYS_'.
 * The prefix is the slave descriptor.
 */
#define SYSID_QSYS_COMPONENT_TYPE altera_avalon_sysid_qsys
#define SYSID_QSYS_COMPONENT_NAME sysid_qsys
#define SYSID_QSYS_BASE 0x10000
#define SYSID_QSYS_SPAN 8
#define SYSID_QSYS_END 0x10007
#define SYSID_QSYS_ID 2899645186
#define SYSID_QSYS_TIMESTAMP 1481055067

/*
 * Macros for device 'ogpu_raster_unit_v0y', class 'altera_avalon_pio'
 * The macros are prefixed with 'OGPU_RASTER_UNIT_V0Y_'.
 * The prefix is the slave descriptor.
 */
#define OGPU_RASTER_UNIT_V0Y_COMPONENT_TYPE altera_avalon_pio
#define OGPU_RASTER_UNIT_V0Y_COMPONENT_NAME ogpu_raster_unit_v0y
#define OGPU_RASTER_UNIT_V0Y_BASE 0x10010
#define OGPU_RASTER_UNIT_V0Y_SPAN 16
#define OGPU_RASTER_UNIT_V0Y_END 0x1001f
#define OGPU_RASTER_UNIT_V0Y_BIT_CLEARING_EDGE_REGISTER 0
#define OGPU_RASTER_UNIT_V0Y_BIT_MODIFYING_OUTPUT_REGISTER 0
#define OGPU_RASTER_UNIT_V0Y_CAPTURE 0
#define OGPU_RASTER_UNIT_V0Y_DATA_WIDTH 16
#define OGPU_RASTER_UNIT_V0Y_DO_TEST_BENCH_WIRING 0
#define OGPU_RASTER_UNIT_V0Y_DRIVEN_SIM_VALUE 0
#define OGPU_RASTER_UNIT_V0Y_EDGE_TYPE NONE
#define OGPU_RASTER_UNIT_V0Y_FREQ 50000000
#define OGPU_RASTER_UNIT_V0Y_HAS_IN 0
#define OGPU_RASTER_UNIT_V0Y_HAS_OUT 1
#define OGPU_RASTER_UNIT_V0Y_HAS_TRI 0
#define OGPU_RASTER_UNIT_V0Y_IRQ_TYPE NONE
#define OGPU_RASTER_UNIT_V0Y_RESET_VALUE 0

/*
 * Macros for device 'ogpu_raster_unit_v0z', class 'altera_avalon_pio'
 * The macros are prefixed with 'OGPU_RASTER_UNIT_V0Z_'.
 * The prefix is the slave descriptor.
 */
#define OGPU_RASTER_UNIT_V0Z_COMPONENT_TYPE altera_avalon_pio
#define OGPU_RASTER_UNIT_V0Z_COMPONENT_NAME ogpu_raster_unit_v0z
#define OGPU_RASTER_UNIT_V0Z_BASE 0x10020
#define OGPU_RASTER_UNIT_V0Z_SPAN 16
#define OGPU_RASTER_UNIT_V0Z_END 0x1002f
#define OGPU_RASTER_UNIT_V0Z_BIT_CLEARING_EDGE_REGISTER 0
#define OGPU_RASTER_UNIT_V0Z_BIT_MODIFYING_OUTPUT_REGISTER 0
#define OGPU_RASTER_UNIT_V0Z_CAPTURE 0
#define OGPU_RASTER_UNIT_V0Z_DATA_WIDTH 16
#define OGPU_RASTER_UNIT_V0Z_DO_TEST_BENCH_WIRING 0
#define OGPU_RASTER_UNIT_V0Z_DRIVEN_SIM_VALUE 0
#define OGPU_RASTER_UNIT_V0Z_EDGE_TYPE NONE
#define OGPU_RASTER_UNIT_V0Z_FREQ 50000000
#define OGPU_RASTER_UNIT_V0Z_HAS_IN 0
#define OGPU_RASTER_UNIT_V0Z_HAS_OUT 1
#define OGPU_RASTER_UNIT_V0Z_HAS_TRI 0
#define OGPU_RASTER_UNIT_V0Z_IRQ_TYPE NONE
#define OGPU_RASTER_UNIT_V0Z_RESET_VALUE 0

/*
 * Macros for device 'ogpu_raster_unit_v1x', class 'altera_avalon_pio'
 * The macros are prefixed with 'OGPU_RASTER_UNIT_V1X_'.
 * The prefix is the slave descriptor.
 */
#define OGPU_RASTER_UNIT_V1X_COMPONENT_TYPE altera_avalon_pio
#define OGPU_RASTER_UNIT_V1X_COMPONENT_NAME ogpu_raster_unit_v1x
#define OGPU_RASTER_UNIT_V1X_BASE 0x10030
#define OGPU_RASTER_UNIT_V1X_SPAN 16
#define OGPU_RASTER_UNIT_V1X_END 0x1003f
#define OGPU_RASTER_UNIT_V1X_BIT_CLEARING_EDGE_REGISTER 0
#define OGPU_RASTER_UNIT_V1X_BIT_MODIFYING_OUTPUT_REGISTER 0
#define OGPU_RASTER_UNIT_V1X_CAPTURE 0
#define OGPU_RASTER_UNIT_V1X_DATA_WIDTH 16
#define OGPU_RASTER_UNIT_V1X_DO_TEST_BENCH_WIRING 0
#define OGPU_RASTER_UNIT_V1X_DRIVEN_SIM_VALUE 0
#define OGPU_RASTER_UNIT_V1X_EDGE_TYPE NONE
#define OGPU_RASTER_UNIT_V1X_FREQ 50000000
#define OGPU_RASTER_UNIT_V1X_HAS_IN 0
#define OGPU_RASTER_UNIT_V1X_HAS_OUT 1
#define OGPU_RASTER_UNIT_V1X_HAS_TRI 0
#define OGPU_RASTER_UNIT_V1X_IRQ_TYPE NONE
#define OGPU_RASTER_UNIT_V1X_RESET_VALUE 0

/*
 * Macros for device 'ogpu_raster_unit_v1y', class 'altera_avalon_pio'
 * The macros are prefixed with 'OGPU_RASTER_UNIT_V1Y_'.
 * The prefix is the slave descriptor.
 */
#define OGPU_RASTER_UNIT_V1Y_COMPONENT_TYPE altera_avalon_pio
#define OGPU_RASTER_UNIT_V1Y_COMPONENT_NAME ogpu_raster_unit_v1y
#define OGPU_RASTER_UNIT_V1Y_BASE 0x10040
#define OGPU_RASTER_UNIT_V1Y_SPAN 16
#define OGPU_RASTER_UNIT_V1Y_END 0x1004f
#define OGPU_RASTER_UNIT_V1Y_BIT_CLEARING_EDGE_REGISTER 0
#define OGPU_RASTER_UNIT_V1Y_BIT_MODIFYING_OUTPUT_REGISTER 0
#define OGPU_RASTER_UNIT_V1Y_CAPTURE 0
#define OGPU_RASTER_UNIT_V1Y_DATA_WIDTH 16
#define OGPU_RASTER_UNIT_V1Y_DO_TEST_BENCH_WIRING 0
#define OGPU_RASTER_UNIT_V1Y_DRIVEN_SIM_VALUE 0
#define OGPU_RASTER_UNIT_V1Y_EDGE_TYPE NONE
#define OGPU_RASTER_UNIT_V1Y_FREQ 50000000
#define OGPU_RASTER_UNIT_V1Y_HAS_IN 0
#define OGPU_RASTER_UNIT_V1Y_HAS_OUT 1
#define OGPU_RASTER_UNIT_V1Y_HAS_TRI 0
#define OGPU_RASTER_UNIT_V1Y_IRQ_TYPE NONE
#define OGPU_RASTER_UNIT_V1Y_RESET_VALUE 0

/*
 * Macros for device 'led_pio', class 'altera_avalon_pio'
 * The macros are prefixed with 'LED_PIO_'.
 * The prefix is the slave descriptor.
 */
#define LED_PIO_COMPONENT_TYPE altera_avalon_pio
#define LED_PIO_COMPONENT_NAME led_pio
#define LED_PIO_BASE 0x10040
#define LED_PIO_SPAN 16
#define LED_PIO_END 0x1004f
#define LED_PIO_BIT_CLEARING_EDGE_REGISTER 0
#define LED_PIO_BIT_MODIFYING_OUTPUT_REGISTER 0
#define LED_PIO_CAPTURE 0
#define LED_PIO_DATA_WIDTH 10
#define LED_PIO_DO_TEST_BENCH_WIRING 0
#define LED_PIO_DRIVEN_SIM_VALUE 0
#define LED_PIO_EDGE_TYPE NONE
#define LED_PIO_FREQ 50000000
#define LED_PIO_HAS_IN 0
#define LED_PIO_HAS_OUT 1
#define LED_PIO_HAS_TRI 0
#define LED_PIO_IRQ_TYPE NONE
#define LED_PIO_RESET_VALUE 0

/*
 * Macros for device 'ogpu_raster_unit_v1z', class 'altera_avalon_pio'
 * The macros are prefixed with 'OGPU_RASTER_UNIT_V1Z_'.
 * The prefix is the slave descriptor.
 */
#define OGPU_RASTER_UNIT_V1Z_COMPONENT_TYPE altera_avalon_pio
#define OGPU_RASTER_UNIT_V1Z_COMPONENT_NAME ogpu_raster_unit_v1z
#define OGPU_RASTER_UNIT_V1Z_BASE 0x10050
#define OGPU_RASTER_UNIT_V1Z_SPAN 16
#define OGPU_RASTER_UNIT_V1Z_END 0x1005f
#define OGPU_RASTER_UNIT_V1Z_BIT_CLEARING_EDGE_REGISTER 0
#define OGPU_RASTER_UNIT_V1Z_BIT_MODIFYING_OUTPUT_REGISTER 0
#define OGPU_RASTER_UNIT_V1Z_CAPTURE 0
#define OGPU_RASTER_UNIT_V1Z_DATA_WIDTH 16
#define OGPU_RASTER_UNIT_V1Z_DO_TEST_BENCH_WIRING 0
#define OGPU_RASTER_UNIT_V1Z_DRIVEN_SIM_VALUE 0
#define OGPU_RASTER_UNIT_V1Z_EDGE_TYPE NONE
#define OGPU_RASTER_UNIT_V1Z_FREQ 50000000
#define OGPU_RASTER_UNIT_V1Z_HAS_IN 0
#define OGPU_RASTER_UNIT_V1Z_HAS_OUT 1
#define OGPU_RASTER_UNIT_V1Z_HAS_TRI 0
#define OGPU_RASTER_UNIT_V1Z_IRQ_TYPE NONE
#define OGPU_RASTER_UNIT_V1Z_RESET_VALUE 0

/*
 * Macros for device 'ogpu_raster_unit_v2x', class 'altera_avalon_pio'
 * The macros are prefixed with 'OGPU_RASTER_UNIT_V2X_'.
 * The prefix is the slave descriptor.
 */
#define OGPU_RASTER_UNIT_V2X_COMPONENT_TYPE altera_avalon_pio
#define OGPU_RASTER_UNIT_V2X_COMPONENT_NAME ogpu_raster_unit_v2x
#define OGPU_RASTER_UNIT_V2X_BASE 0x10060
#define OGPU_RASTER_UNIT_V2X_SPAN 16
#define OGPU_RASTER_UNIT_V2X_END 0x1006f
#define OGPU_RASTER_UNIT_V2X_BIT_CLEARING_EDGE_REGISTER 0
#define OGPU_RASTER_UNIT_V2X_BIT_MODIFYING_OUTPUT_REGISTER 0
#define OGPU_RASTER_UNIT_V2X_CAPTURE 0
#define OGPU_RASTER_UNIT_V2X_DATA_WIDTH 16
#define OGPU_RASTER_UNIT_V2X_DO_TEST_BENCH_WIRING 0
#define OGPU_RASTER_UNIT_V2X_DRIVEN_SIM_VALUE 0
#define OGPU_RASTER_UNIT_V2X_EDGE_TYPE NONE
#define OGPU_RASTER_UNIT_V2X_FREQ 50000000
#define OGPU_RASTER_UNIT_V2X_HAS_IN 0
#define OGPU_RASTER_UNIT_V2X_HAS_OUT 1
#define OGPU_RASTER_UNIT_V2X_HAS_TRI 0
#define OGPU_RASTER_UNIT_V2X_IRQ_TYPE NONE
#define OGPU_RASTER_UNIT_V2X_RESET_VALUE 0

/*
 * Macros for device 'ogpu_raster_unit_v2y', class 'altera_avalon_pio'
 * The macros are prefixed with 'OGPU_RASTER_UNIT_V2Y_'.
 * The prefix is the slave descriptor.
 */
#define OGPU_RASTER_UNIT_V2Y_COMPONENT_TYPE altera_avalon_pio
#define OGPU_RASTER_UNIT_V2Y_COMPONENT_NAME ogpu_raster_unit_v2y
#define OGPU_RASTER_UNIT_V2Y_BASE 0x10070
#define OGPU_RASTER_UNIT_V2Y_SPAN 16
#define OGPU_RASTER_UNIT_V2Y_END 0x1007f
#define OGPU_RASTER_UNIT_V2Y_BIT_CLEARING_EDGE_REGISTER 0
#define OGPU_RASTER_UNIT_V2Y_BIT_MODIFYING_OUTPUT_REGISTER 0
#define OGPU_RASTER_UNIT_V2Y_CAPTURE 0
#define OGPU_RASTER_UNIT_V2Y_DATA_WIDTH 16
#define OGPU_RASTER_UNIT_V2Y_DO_TEST_BENCH_WIRING 0
#define OGPU_RASTER_UNIT_V2Y_DRIVEN_SIM_VALUE 0
#define OGPU_RASTER_UNIT_V2Y_EDGE_TYPE NONE
#define OGPU_RASTER_UNIT_V2Y_FREQ 50000000
#define OGPU_RASTER_UNIT_V2Y_HAS_IN 0
#define OGPU_RASTER_UNIT_V2Y_HAS_OUT 1
#define OGPU_RASTER_UNIT_V2Y_HAS_TRI 0
#define OGPU_RASTER_UNIT_V2Y_IRQ_TYPE NONE
#define OGPU_RASTER_UNIT_V2Y_RESET_VALUE 0

/*
 * Macros for device 'ogpu_raster_unit_v2z', class 'altera_avalon_pio'
 * The macros are prefixed with 'OGPU_RASTER_UNIT_V2Z_'.
 * The prefix is the slave descriptor.
 */
#define OGPU_RASTER_UNIT_V2Z_COMPONENT_TYPE altera_avalon_pio
#define OGPU_RASTER_UNIT_V2Z_COMPONENT_NAME ogpu_raster_unit_v2z
#define OGPU_RASTER_UNIT_V2Z_BASE 0x10080
#define OGPU_RASTER_UNIT_V2Z_SPAN 16
#define OGPU_RASTER_UNIT_V2Z_END 0x1008f
#define OGPU_RASTER_UNIT_V2Z_BIT_CLEARING_EDGE_REGISTER 0
#define OGPU_RASTER_UNIT_V2Z_BIT_MODIFYING_OUTPUT_REGISTER 0
#define OGPU_RASTER_UNIT_V2Z_CAPTURE 0
#define OGPU_RASTER_UNIT_V2Z_DATA_WIDTH 16
#define OGPU_RASTER_UNIT_V2Z_DO_TEST_BENCH_WIRING 0
#define OGPU_RASTER_UNIT_V2Z_DRIVEN_SIM_VALUE 0
#define OGPU_RASTER_UNIT_V2Z_EDGE_TYPE NONE
#define OGPU_RASTER_UNIT_V2Z_FREQ 50000000
#define OGPU_RASTER_UNIT_V2Z_HAS_IN 0
#define OGPU_RASTER_UNIT_V2Z_HAS_OUT 1
#define OGPU_RASTER_UNIT_V2Z_HAS_TRI 0
#define OGPU_RASTER_UNIT_V2Z_IRQ_TYPE NONE
#define OGPU_RASTER_UNIT_V2Z_RESET_VALUE 0

/*
 * Macros for device 'dipsw_pio', class 'altera_avalon_pio'
 * The macros are prefixed with 'DIPSW_PIO_'.
 * The prefix is the slave descriptor.
 */
#define DIPSW_PIO_COMPONENT_TYPE altera_avalon_pio
#define DIPSW_PIO_COMPONENT_NAME dipsw_pio
#define DIPSW_PIO_BASE 0x10080
#define DIPSW_PIO_SPAN 16
#define DIPSW_PIO_END 0x1008f
#define DIPSW_PIO_IRQ 2
#define DIPSW_PIO_BIT_CLEARING_EDGE_REGISTER 1
#define DIPSW_PIO_BIT_MODIFYING_OUTPUT_REGISTER 0
#define DIPSW_PIO_CAPTURE 1
#define DIPSW_PIO_DATA_WIDTH 10
#define DIPSW_PIO_DO_TEST_BENCH_WIRING 0
#define DIPSW_PIO_DRIVEN_SIM_VALUE 0
#define DIPSW_PIO_EDGE_TYPE ANY
#define DIPSW_PIO_FREQ 50000000
#define DIPSW_PIO_HAS_IN 1
#define DIPSW_PIO_HAS_OUT 0
#define DIPSW_PIO_HAS_TRI 0
#define DIPSW_PIO_IRQ_TYPE EDGE
#define DIPSW_PIO_RESET_VALUE 0

/*
 * Macros for device 'ogpu_raster_unit_status', class 'altera_avalon_pio'
 * The macros are prefixed with 'OGPU_RASTER_UNIT_STATUS_'.
 * The prefix is the slave descriptor.
 */
#define OGPU_RASTER_UNIT_STATUS_COMPONENT_TYPE altera_avalon_pio
#define OGPU_RASTER_UNIT_STATUS_COMPONENT_NAME ogpu_raster_unit_status
#define OGPU_RASTER_UNIT_STATUS_BASE 0x10090
#define OGPU_RASTER_UNIT_STATUS_SPAN 16
#define OGPU_RASTER_UNIT_STATUS_END 0x1009f
#define OGPU_RASTER_UNIT_STATUS_BIT_CLEARING_EDGE_REGISTER 0
#define OGPU_RASTER_UNIT_STATUS_BIT_MODIFYING_OUTPUT_REGISTER 0
#define OGPU_RASTER_UNIT_STATUS_CAPTURE 0
#define OGPU_RASTER_UNIT_STATUS_DATA_WIDTH 32
#define OGPU_RASTER_UNIT_STATUS_DO_TEST_BENCH_WIRING 0
#define OGPU_RASTER_UNIT_STATUS_DRIVEN_SIM_VALUE 0
#define OGPU_RASTER_UNIT_STATUS_EDGE_TYPE NONE
#define OGPU_RASTER_UNIT_STATUS_FREQ 50000000
#define OGPU_RASTER_UNIT_STATUS_HAS_IN 1
#define OGPU_RASTER_UNIT_STATUS_HAS_OUT 0
#define OGPU_RASTER_UNIT_STATUS_HAS_TRI 0
#define OGPU_RASTER_UNIT_STATUS_IRQ_TYPE NONE
#define OGPU_RASTER_UNIT_STATUS_RESET_VALUE 0

/*
 * Macros for device 'ogpu_raster_unit_command', class 'altera_avalon_pio'
 * The macros are prefixed with 'OGPU_RASTER_UNIT_COMMAND_'.
 * The prefix is the slave descriptor.
 */
#define OGPU_RASTER_UNIT_COMMAND_COMPONENT_TYPE altera_avalon_pio
#define OGPU_RASTER_UNIT_COMMAND_COMPONENT_NAME ogpu_raster_unit_command
#define OGPU_RASTER_UNIT_COMMAND_BASE 0x100a0
#define OGPU_RASTER_UNIT_COMMAND_SPAN 16
#define OGPU_RASTER_UNIT_COMMAND_END 0x100af
#define OGPU_RASTER_UNIT_COMMAND_BIT_CLEARING_EDGE_REGISTER 0
#define OGPU_RASTER_UNIT_COMMAND_BIT_MODIFYING_OUTPUT_REGISTER 0
#define OGPU_RASTER_UNIT_COMMAND_CAPTURE 0
#define OGPU_RASTER_UNIT_COMMAND_DATA_WIDTH 8
#define OGPU_RASTER_UNIT_COMMAND_DO_TEST_BENCH_WIRING 0
#define OGPU_RASTER_UNIT_COMMAND_DRIVEN_SIM_VALUE 0
#define OGPU_RASTER_UNIT_COMMAND_EDGE_TYPE NONE
#define OGPU_RASTER_UNIT_COMMAND_FREQ 50000000
#define OGPU_RASTER_UNIT_COMMAND_HAS_IN 0
#define OGPU_RASTER_UNIT_COMMAND_HAS_OUT 1
#define OGPU_RASTER_UNIT_COMMAND_HAS_TRI 0
#define OGPU_RASTER_UNIT_COMMAND_IRQ_TYPE NONE
#define OGPU_RASTER_UNIT_COMMAND_RESET_VALUE 0

/*
 * Macros for device 'ogpu_raster_unit_clip_rect0', class 'altera_avalon_pio'
 * The macros are prefixed with 'OGPU_RASTER_UNIT_CLIP_RECT0_'.
 * The prefix is the slave descriptor.
 */
#define OGPU_RASTER_UNIT_CLIP_RECT0_COMPONENT_TYPE altera_avalon_pio
#define OGPU_RASTER_UNIT_CLIP_RECT0_COMPONENT_NAME ogpu_raster_unit_clip_rect0
#define OGPU_RASTER_UNIT_CLIP_RECT0_BASE 0x100b0
#define OGPU_RASTER_UNIT_CLIP_RECT0_SPAN 16
#define OGPU_RASTER_UNIT_CLIP_RECT0_END 0x100bf
#define OGPU_RASTER_UNIT_CLIP_RECT0_BIT_CLEARING_EDGE_REGISTER 0
#define OGPU_RASTER_UNIT_CLIP_RECT0_BIT_MODIFYING_OUTPUT_REGISTER 0
#define OGPU_RASTER_UNIT_CLIP_RECT0_CAPTURE 0
#define OGPU_RASTER_UNIT_CLIP_RECT0_DATA_WIDTH 32
#define OGPU_RASTER_UNIT_CLIP_RECT0_DO_TEST_BENCH_WIRING 0
#define OGPU_RASTER_UNIT_CLIP_RECT0_DRIVEN_SIM_VALUE 0
#define OGPU_RASTER_UNIT_CLIP_RECT0_EDGE_TYPE NONE
#define OGPU_RASTER_UNIT_CLIP_RECT0_FREQ 50000000
#define OGPU_RASTER_UNIT_CLIP_RECT0_HAS_IN 0
#define OGPU_RASTER_UNIT_CLIP_RECT0_HAS_OUT 1
#define OGPU_RASTER_UNIT_CLIP_RECT0_HAS_TRI 0
#define OGPU_RASTER_UNIT_CLIP_RECT0_IRQ_TYPE NONE
#define OGPU_RASTER_UNIT_CLIP_RECT0_RESET_VALUE 0

/*
 * Macros for device 'ogpu_raster_unit_clip_rect1', class 'altera_avalon_pio'
 * The macros are prefixed with 'OGPU_RASTER_UNIT_CLIP_RECT1_'.
 * The prefix is the slave descriptor.
 */
#define OGPU_RASTER_UNIT_CLIP_RECT1_COMPONENT_TYPE altera_avalon_pio
#define OGPU_RASTER_UNIT_CLIP_RECT1_COMPONENT_NAME ogpu_raster_unit_clip_rect1
#define OGPU_RASTER_UNIT_CLIP_RECT1_BASE 0x100c0
#define OGPU_RASTER_UNIT_CLIP_RECT1_SPAN 16
#define OGPU_RASTER_UNIT_CLIP_RECT1_END 0x100cf
#define OGPU_RASTER_UNIT_CLIP_RECT1_BIT_CLEARING_EDGE_REGISTER 0
#define OGPU_RASTER_UNIT_CLIP_RECT1_BIT_MODIFYING_OUTPUT_REGISTER 0
#define OGPU_RASTER_UNIT_CLIP_RECT1_CAPTURE 0
#define OGPU_RASTER_UNIT_CLIP_RECT1_DATA_WIDTH 32
#define OGPU_RASTER_UNIT_CLIP_RECT1_DO_TEST_BENCH_WIRING 0
#define OGPU_RASTER_UNIT_CLIP_RECT1_DRIVEN_SIM_VALUE 0
#define OGPU_RASTER_UNIT_CLIP_RECT1_EDGE_TYPE NONE
#define OGPU_RASTER_UNIT_CLIP_RECT1_FREQ 50000000
#define OGPU_RASTER_UNIT_CLIP_RECT1_HAS_IN 0
#define OGPU_RASTER_UNIT_CLIP_RECT1_HAS_OUT 1
#define OGPU_RASTER_UNIT_CLIP_RECT1_HAS_TRI 0
#define OGPU_RASTER_UNIT_CLIP_RECT1_IRQ_TYPE NONE
#define OGPU_RASTER_UNIT_CLIP_RECT1_RESET_VALUE 0

/*
 * Macros for device 'button_pio', class 'altera_avalon_pio'
 * The macros are prefixed with 'BUTTON_PIO_'.
 * The prefix is the slave descriptor.
 */
#define BUTTON_PIO_COMPONENT_TYPE altera_avalon_pio
#define BUTTON_PIO_COMPONENT_NAME button_pio
#define BUTTON_PIO_BASE 0x100c0
#define BUTTON_PIO_SPAN 16
#define BUTTON_PIO_END 0x100cf
#define BUTTON_PIO_IRQ 1
#define BUTTON_PIO_BIT_CLEARING_EDGE_REGISTER 1
#define BUTTON_PIO_BIT_MODIFYING_OUTPUT_REGISTER 0
#define BUTTON_PIO_CAPTURE 1
#define BUTTON_PIO_DATA_WIDTH 2
#define BUTTON_PIO_DO_TEST_BENCH_WIRING 0
#define BUTTON_PIO_DRIVEN_SIM_VALUE 0
#define BUTTON_PIO_EDGE_TYPE FALLING
#define BUTTON_PIO_FREQ 50000000
#define BUTTON_PIO_HAS_IN 1
#define BUTTON_PIO_HAS_OUT 0
#define BUTTON_PIO_HAS_TRI 0
#define BUTTON_PIO_IRQ_TYPE EDGE
#define BUTTON_PIO_RESET_VALUE 0

/*
 * Macros for device 'ogpu_raster_unit_tile0', class 'altera_avalon_pio'
 * The macros are prefixed with 'OGPU_RASTER_UNIT_TILE0_'.
 * The prefix is the slave descriptor.
 */
#define OGPU_RASTER_UNIT_TILE0_COMPONENT_TYPE altera_avalon_pio
#define OGPU_RASTER_UNIT_TILE0_COMPONENT_NAME ogpu_raster_unit_tile0
#define OGPU_RASTER_UNIT_TILE0_BASE 0x100d0
#define OGPU_RASTER_UNIT_TILE0_SPAN 16
#define OGPU_RASTER_UNIT_TILE0_END 0x100df
#define OGPU_RASTER_UNIT_TILE0_BIT_CLEARING_EDGE_REGISTER 0
#define OGPU_RASTER_UNIT_TILE0_BIT_MODIFYING_OUTPUT_REGISTER 0
#define OGPU_RASTER_UNIT_TILE0_CAPTURE 0
#define OGPU_RASTER_UNIT_TILE0_DATA_WIDTH 32
#define OGPU_RASTER_UNIT_TILE0_DO_TEST_BENCH_WIRING 0
#define OGPU_RASTER_UNIT_TILE0_DRIVEN_SIM_VALUE 0
#define OGPU_RASTER_UNIT_TILE0_EDGE_TYPE NONE
#define OGPU_RASTER_UNIT_TILE0_FREQ 50000000
#define OGPU_RASTER_UNIT_TILE0_HAS_IN 0
#define OGPU_RASTER_UNIT_TILE0_HAS_OUT 1
#define OGPU_RASTER_UNIT_TILE0_HAS_TRI 0
#define OGPU_RASTER_UNIT_TILE0_IRQ_TYPE NONE
#define OGPU_RASTER_UNIT_TILE0_RESET_VALUE 0

/*
 * Macros for device 'ogpu_raster_unit_tile1', class 'altera_avalon_pio'
 * The macros are prefixed with 'OGPU_RASTER_UNIT_TILE1_'.
 * The prefix is the slave descriptor.
 */
#define OGPU_RASTER_UNIT_TILE1_COMPONENT_TYPE altera_avalon_pio
#define OGPU_RASTER_UNIT_TILE1_COMPONENT_NAME ogpu_raster_unit_tile1
#define OGPU_RASTER_UNIT_TILE1_BASE 0x100e0
#define OGPU_RASTER_UNIT_TILE1_SPAN 16
#define OGPU_RASTER_UNIT_TILE1_END 0x100ef
#define OGPU_RASTER_UNIT_TILE1_BIT_CLEARING_EDGE_REGISTER 0
#define OGPU_RASTER_UNIT_TILE1_BIT_MODIFYING_OUTPUT_REGISTER 0
#define OGPU_RASTER_UNIT_TILE1_CAPTURE 0
#define OGPU_RASTER_UNIT_TILE1_DATA_WIDTH 32
#define OGPU_RASTER_UNIT_TILE1_DO_TEST_BENCH_WIRING 0
#define OGPU_RASTER_UNIT_TILE1_DRIVEN_SIM_VALUE 0
#define OGPU_RASTER_UNIT_TILE1_EDGE_TYPE NONE
#define OGPU_RASTER_UNIT_TILE1_FREQ 50000000
#define OGPU_RASTER_UNIT_TILE1_HAS_IN 0
#define OGPU_RASTER_UNIT_TILE1_HAS_OUT 1
#define OGPU_RASTER_UNIT_TILE1_HAS_TRI 0
#define OGPU_RASTER_UNIT_TILE1_IRQ_TYPE NONE
#define OGPU_RASTER_UNIT_TILE1_RESET_VALUE 0

/*
 * Macros for device 'ogpu_raster_unit_depth_coef_a', class 'altera_avalon_pio'
 * The macros are prefixed with 'OGPU_RASTER_UNIT_DEPTH_COEF_A_'.
 * The prefix is the slave descriptor.
 */
#define OGPU_RASTER_UNIT_DEPTH_COEF_A_COMPONENT_TYPE altera_avalon_pio
#define OGPU_RASTER_UNIT_DEPTH_COEF_A_COMPONENT_NAME ogpu_raster_unit_depth_coef_a
#define OGPU_RASTER_UNIT_DEPTH_COEF_A_BASE 0x100f0
#define OGPU_RASTER_UNIT_DEPTH_COEF_A_SPAN 16
#define OGPU_RASTER_UNIT_DEPTH_COEF_A_END 0x100ff
#define OGPU_RASTER_UNIT_DEPTH_COEF_A_BIT_CLEARING_EDGE_REGISTER 0
#define OGPU_RASTER_UNIT_DEPTH_COEF_A_BIT_MODIFYING_OUTPUT_REGISTER 0
#define OGPU_RASTER_UNIT_DEPTH_COEF_A_CAPTURE 0
#define OGPU_RASTER_UNIT_DEPTH_COEF_A_DATA_WIDTH 32
#define OGPU_RASTER_UNIT_DEPTH_COEF_A_DO_TEST_BENCH_WIRING 0
#define OGPU_RASTER_UNIT_DEPTH_COEF_A_DRIVEN_SIM_VALUE 0
#define OGPU_RASTER_UNIT_DEPTH_COEF_A_EDGE_TYPE NONE
#define OGPU_RASTER_UNIT_DEPTH_COEF_A_FREQ 50000000
#define OGPU_RASTER_UNIT_DEPTH_COEF_A_HAS_IN 0
#define OGPU_RASTER_UNIT_DEPTH_COEF_A_HAS_OUT 1
#define OGPU_RASTER_UNIT_DEPTH_COEF_A_HAS_TRI 0
#define OGPU_RASTER_UNIT_DEPTH_COEF_A_IRQ_TYPE NONE
#define OGPU_RASTER_UNIT_DEPTH_COEF_A_RESET_VALUE 0

/*
 * Macros for device 'ogpu_raster_unit_depth_coef_b', class 'altera_avalon_pio'
 * The macros are prefixed with 'OGPU_RASTER_UNIT_DEPTH_COEF_B_'.
 * The prefix is the slave descriptor.
 */
#define OGPU_RASTER_UNIT_DEPTH_COEF_B_COMPONENT_TYPE altera_avalon_pio
#define OGPU_RASTER_UNIT_DEPTH_COEF_B_COMPONENT_NAME ogpu_raster_unit_depth_coef_b
#define OGPU_RASTER_UNIT_DEPTH_COEF_B_BASE 0x10100
#define OGPU_RASTER_UNIT_DEPTH_COEF_B_SPAN 16
#define OGPU_RASTER_UNIT_DEPTH_COEF_B_END 0x1010f
#define OGPU_RASTER_UNIT_DEPTH_COEF_B_BIT_CLEARING_EDGE_REGISTER 0
#define OGPU_RASTER_UNIT_DEPTH_COEF_B_BIT_MODIFYING_OUTPUT_REGISTER 0
#define OGPU_RASTER_UNIT_DEPTH_COEF_B_CAPTURE 0
#define OGPU_RASTER_UNIT_DEPTH_COEF_B_DATA_WIDTH 32
#define OGPU_RASTER_UNIT_DEPTH_COEF_B_DO_TEST_BENCH_WIRING 0
#define OGPU_RASTER_UNIT_DEPTH_COEF_B_DRIVEN_SIM_VALUE 0
#define OGPU_RASTER_UNIT_DEPTH_COEF_B_EDGE_TYPE NONE
#define OGPU_RASTER_UNIT_DEPTH_COEF_B_FREQ 50000000
#define OGPU_RASTER_UNIT_DEPTH_COEF_B_HAS_IN 0
#define OGPU_RASTER_UNIT_DEPTH_COEF_B_HAS_OUT 1
#define OGPU_RASTER_UNIT_DEPTH_COEF_B_HAS_TRI 0
#define OGPU_RASTER_UNIT_DEPTH_COEF_B_IRQ_TYPE NONE
#define OGPU_RASTER_UNIT_DEPTH_COEF_B_RESET_VALUE 0

/*
 * Macros for device 'ogpu_raster_unit_depth_coef_c', class 'altera_avalon_pio'
 * The macros are prefixed with 'OGPU_RASTER_UNIT_DEPTH_COEF_C_'.
 * The prefix is the slave descriptor.
 */
#define OGPU_RASTER_UNIT_DEPTH_COEF_C_COMPONENT_TYPE altera_avalon_pio
#define OGPU_RASTER_UNIT_DEPTH_COEF_C_COMPONENT_NAME ogpu_raster_unit_depth_coef_c
#define OGPU_RASTER_UNIT_DEPTH_COEF_C_BASE 0x10110
#define OGPU_RASTER_UNIT_DEPTH_COEF_C_SPAN 16
#define OGPU_RASTER_UNIT_DEPTH_COEF_C_END 0x1011f
#define OGPU_RASTER_UNIT_DEPTH_COEF_C_BIT_CLEARING_EDGE_REGISTER 0
#define OGPU_RASTER_UNIT_DEPTH_COEF_C_BIT_MODIFYING_OUTPUT_REGISTER 0
#define OGPU_RASTER_UNIT_DEPTH_COEF_C_CAPTURE 0
#define OGPU_RASTER_UNIT_DEPTH_COEF_C_DATA_WIDTH 32
#define OGPU_RASTER_UNIT_DEPTH_COEF_C_DO_TEST_BENCH_WIRING 0
#define OGPU_RASTER_UNIT_DEPTH_COEF_C_DRIVEN_SIM_VALUE 0
#define OGPU_RASTER_UNIT_DEPTH_COEF_C_EDGE_TYPE NONE
#define OGPU_RASTER_UNIT_DEPTH_COEF_C_FREQ 50000000
#define OGPU_RASTER_UNIT_DEPTH_COEF_C_HAS_IN 0
#define OGPU_RASTER_UNIT_DEPTH_COEF_C_HAS_OUT 1
#define OGPU_RASTER_UNIT_DEPTH_COEF_C_HAS_TRI 0
#define OGPU_RASTER_UNIT_DEPTH_COEF_C_IRQ_TYPE NONE
#define OGPU_RASTER_UNIT_DEPTH_COEF_C_RESET_VALUE 0

/*
 * Macros for device 'ogpu_raster_unit_quad_buffer_addr_low', class 'altera_avalon_pio'
 * The macros are prefixed with 'OGPU_RASTER_UNIT_QUAD_BUFFER_ADDR_LOW_'.
 * The prefix is the slave descriptor.
 */
#define OGPU_RASTER_UNIT_QUAD_BUFFER_ADDR_LOW_COMPONENT_TYPE altera_avalon_pio
#define OGPU_RASTER_UNIT_QUAD_BUFFER_ADDR_LOW_COMPONENT_NAME ogpu_raster_unit_quad_buffer_addr_low
#define OGPU_RASTER_UNIT_QUAD_BUFFER_ADDR_LOW_BASE 0x10120
#define OGPU_RASTER_UNIT_QUAD_BUFFER_ADDR_LOW_SPAN 16
#define OGPU_RASTER_UNIT_QUAD_BUFFER_ADDR_LOW_END 0x1012f
#define OGPU_RASTER_UNIT_QUAD_BUFFER_ADDR_LOW_BIT_CLEARING_EDGE_REGISTER 0
#define OGPU_RASTER_UNIT_QUAD_BUFFER_ADDR_LOW_BIT_MODIFYING_OUTPUT_REGISTER 0
#define OGPU_RASTER_UNIT_QUAD_BUFFER_ADDR_LOW_CAPTURE 0
#define OGPU_RASTER_UNIT_QUAD_BUFFER_ADDR_LOW_DATA_WIDTH 32
#define OGPU_RASTER_UNIT_QUAD_BUFFER_ADDR_LOW_DO_TEST_BENCH_WIRING 0
#define OGPU_RASTER_UNIT_QUAD_BUFFER_ADDR_LOW_DRIVEN_SIM_VALUE 0
#define OGPU_RASTER_UNIT_QUAD_BUFFER_ADDR_LOW_EDGE_TYPE NONE
#define OGPU_RASTER_UNIT_QUAD_BUFFER_ADDR_LOW_FREQ 50000000
#define OGPU_RASTER_UNIT_QUAD_BUFFER_ADDR_LOW_HAS_IN 0
#define OGPU_RASTER_UNIT_QUAD_BUFFER_ADDR_LOW_HAS_OUT 1
#define OGPU_RASTER_UNIT_QUAD_BUFFER_ADDR_LOW_HAS_TRI 0
#define OGPU_RASTER_UNIT_QUAD_BUFFER_ADDR_LOW_IRQ_TYPE NONE
#define OGPU_RASTER_UNIT_QUAD_BUFFER_ADDR_LOW_RESET_VALUE 0

/*
 * Macros for device 'ogpu_raster_unit_quad_buffer_addr_high', class 'altera_avalon_pio'
 * The macros are prefixed with 'OGPU_RASTER_UNIT_QUAD_BUFFER_ADDR_HIGH_'.
 * The prefix is the slave descriptor.
 */
#define OGPU_RASTER_UNIT_QUAD_BUFFER_ADDR_HIGH_COMPONENT_TYPE altera_avalon_pio
#define OGPU_RASTER_UNIT_QUAD_BUFFER_ADDR_HIGH_COMPONENT_NAME ogpu_raster_unit_quad_buffer_addr_high
#define OGPU_RASTER_UNIT_QUAD_BUFFER_ADDR_HIGH_BASE 0x10130
#define OGPU_RASTER_UNIT_QUAD_BUFFER_ADDR_HIGH_SPAN 16
#define OGPU_RASTER_UNIT_QUAD_BUFFER_ADDR_HIGH_END 0x1013f
#define OGPU_RASTER_UNIT_QUAD_BUFFER_ADDR_HIGH_BIT_CLEARING_EDGE_REGISTER 0
#define OGPU_RASTER_UNIT_QUAD_BUFFER_ADDR_HIGH_BIT_MODIFYING_OUTPUT_REGISTER 0
#define OGPU_RASTER_UNIT_QUAD_BUFFER_ADDR_HIGH_CAPTURE 0
#define OGPU_RASTER_UNIT_QUAD_BUFFER_ADDR_HIGH_DATA_WIDTH 32
#define OGPU_RASTER_UNIT_QUAD_BUFFER_ADDR_HIGH_DO_TEST_BENCH_WIRING 0
#define OGPU_RASTER_UNIT_QUAD_BUFFER_ADDR_HIGH_DRIVEN_SIM_VALUE 0
#define OGPU_RASTER_UNIT_QUAD_BUFFER_ADDR_HIGH_EDGE_TYPE NONE
#define OGPU_RASTER_UNIT_QUAD_BUFFER_ADDR_HIGH_FREQ 50000000
#define OGPU_RASTER_UNIT_QUAD_BUFFER_ADDR_HIGH_HAS_IN 0
#define OGPU_RASTER_UNIT_QUAD_BUFFER_ADDR_HIGH_HAS_OUT 1
#define OGPU_RASTER_UNIT_QUAD_BUFFER_ADDR_HIGH_HAS_TRI 0
#define OGPU_RASTER_UNIT_QUAD_BUFFER_ADDR_HIGH_IRQ_TYPE NONE
#define OGPU_RASTER_UNIT_QUAD_BUFFER_ADDR_HIGH_RESET_VALUE 0

/*
 * Macros for device 'jtag_uart', class 'altera_avalon_jtag_uart'
 * The macros are prefixed with 'JTAG_UART_'.
 * The prefix is the slave descriptor.
 */
#define JTAG_UART_COMPONENT_TYPE altera_avalon_jtag_uart
#define JTAG_UART_COMPONENT_NAME jtag_uart
#define JTAG_UART_BASE 0x20000
#define JTAG_UART_SPAN 8
#define JTAG_UART_END 0x20007
#define JTAG_UART_IRQ 0
#define JTAG_UART_READ_DEPTH 64
#define JTAG_UART_READ_THRESHOLD 8
#define JTAG_UART_WRITE_DEPTH 64
#define JTAG_UART_WRITE_THRESHOLD 8


#endif /* _ALTERA_HPS_0_H_ */
